{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/employee-service.service\";\nimport * as i2 from \"@angular/forms\";\nexport let EmployeeAddComponent = /*#__PURE__*/(() => {\n  class EmployeeAddComponent {\n    constructor(employeeService) {\n      this.employeeService = employeeService;\n      this.employeeForm = new FormGroup({\n        hf_Id: new FormControl('0', [Validators.required]),\n        txt_FullName: new FormControl('', [Validators.required]),\n        txt_Address: new FormControl('', Validators.required),\n        txt_Phone: new FormControl('', Validators.required),\n        txt_Email: new FormControl('', [Validators.required, Validators.email])\n      });\n    }\n\n    saveEmployee() {\n      if (this.employeeForm.invalid) {\n        Swal.fire('Required', 'Please fill all field', 'error');\n        this.employeeForm.markAllAsTouched();\n        return;\n      }\n\n      Swal.fire({\n        title: 'Please Wait !',\n        html: 'Saving Data...',\n        allowOutsideClick: false,\n        showConfirmButton: false,\n        willOpen: () => {\n          Swal.showLoading(null);\n        }\n      });\n      this.employeeService.saveEmployee(this.employeeForm.value).subscribe(data => {}, error => {\n        Swal.close();\n        console.error(error);\n      });\n    }\n\n    ngOnInit() {}\n\n    showModal() {\n      document.getElementById(\"exampleModalCenter\").style.background = \"rgba(169, 169, 169, 0.3)\";\n      document.getElementById(\"exampleModalCenter\").style.display = \"block\";\n    }\n\n    closeModal() {\n      document.getElementById(\"exampleModalCenter\").style.background = \"\";\n      document.getElementById(\"exampleModalCenter\").style.display = \"none\";\n    }\n\n    showModalEdit(data) {\n      document.getElementById(\"exampleModalCenter\").style.background = \"rgba(169, 169, 169, 0.3)\";\n      this.employeeForm.controls[\"hf_Id\"].setValue(data.MAST_EMPLOYEE_KEY);\n      this.employeeForm.controls[\"txt_FullName\"].setValue(data.FULLNAME);\n      this.employeeForm.controls[\"txt_Address\"].setValue(data.ADDRESS);\n      this.employeeForm.controls[\"txt_Phone\"].setValue(data.PHONE);\n      this.employeeForm.controls[\"txt_Email\"].setValue(data.EMAIL);\n      document.getElementById(\"exampleModalCenter\").style.display = \"block\";\n    }\n\n  }\n\n  EmployeeAddComponent.ɵfac = function EmployeeAddComponent_Factory(t) {\n    return new (t || EmployeeAddComponent)(i0.ɵɵdirectiveInject(i1.EmployeeServiceService));\n  };\n\n  EmployeeAddComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EmployeeAddComponent,\n    selectors: [[\"app-employee-add\"]],\n    decls: 29,\n    vars: 9,\n    consts: [[\"id\", \"exampleModalCenter\", \"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"exampleModalCenterTitle\", \"aria-hidden\", \"true\", 1, \"modal\", \"show\"], [\"role\", \"document\", 1, \"modal-dialog\", \"modal-dialog-centered\"], [1, \"modal-content\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"modal-header\"], [\"id\", \"exampleModalLongTitle\", 1, \"modal-title\"], [1, \"modal-body\"], [1, \"form-group\"], [\"for\", \"exampleInputname1\"], [\"type\", \"text\", \"formControlName\", \"txt_FullName\", \"id\", \"exampleInputname1\", \"aria-describedby\", \"\", \"placeholder\", \"Enter Name\", 1, \"form-control\"], [\"for\", \"exampleInputEmail1\"], [\"type\", \"email\", \"formControlName\", \"txt_Email\", \"id\", \"exampleInputEmail1\", \"aria-describedby\", \"\", \"placeholder\", \"Enter Email\", 1, \"form-control\"], [\"for\", \"exampleInputaddr1\"], [\"type\", \"text\", \"formControlName\", \"txt_Address\", \"id\", \"exampleInputaddr1\", \"aria-describedby\", \"\", \"placeholder\", \"Enter Address\", 1, \"form-control\"], [\"for\", \"exampleInputphone1\"], [\"type\", \"text\", \"formControlName\", \"txt_Phone\", \"id\", \"exampleInputphone1\", \"aria-describedby\", \"\", \"placeholder\", \"Enter Phone\", 1, \"form-control\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n    template: function EmployeeAddComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function EmployeeAddComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.saveEmployee();\n        });\n        i0.ɵɵelementStart(4, \"div\", 4)(5, \"h5\", 5);\n        i0.ɵɵtext(6, \"Add Employee\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"div\", 7)(9, \"label\", 8);\n        i0.ɵɵtext(10, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 7)(13, \"label\", 10);\n        i0.ɵɵtext(14, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 7)(17, \"label\", 12);\n        i0.ɵɵtext(18, \"Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 7)(21, \"label\", 14);\n        i0.ɵɵtext(22, \"Phone No\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"input\", 15);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"div\", 16)(25, \"button\", 17);\n        i0.ɵɵlistener(\"click\", function EmployeeAddComponent_Template_button_click_25_listener() {\n          return ctx.closeModal();\n        });\n        i0.ɵɵtext(26, \"Close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"button\", 18);\n        i0.ɵɵtext(28, \"Save changes\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.employeeForm);\n        i0.ɵɵadvance(8);\n        i0.ɵɵclassProp(\"error-field-red\", ctx.employeeForm.controls.txt_FullName.invalid && ctx.employeeForm.controls.txt_FullName.touched);\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassProp(\"error-field-red\", ctx.employeeForm.controls.txt_Email.invalid && ctx.employeeForm.controls.txt_Email.touched);\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassProp(\"error-field-red\", ctx.employeeForm.controls.txt_Address.invalid && ctx.employeeForm.controls.txt_Address.touched);\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassProp(\"error-field-red\", ctx.employeeForm.controls.txt_Phone.invalid && ctx.employeeForm.controls.txt_Phone.touched);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName]\n  });\n  return EmployeeAddComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}