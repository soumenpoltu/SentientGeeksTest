{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/login-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport let LoginFormComponent = /*#__PURE__*/(() => {\n  class LoginFormComponent {\n    constructor(loginservice, route) {\n      this.loginservice = loginservice;\n      this.route = route;\n      this.loginform = new FormGroup({\n        txt_EMAIL: new FormControl('', [Validators.required, Validators.email]),\n        txt_PASSWORD: new FormControl('', Validators.required)\n      });\n    }\n\n    ngOnInit() {}\n\n    getlogin() {\n      debugger;\n\n      if (this.loginform.invalid) {\n        Swal.fire('Required', 'Please fill all field', 'error');\n        this.loginform.markAllAsTouched();\n        return;\n      }\n\n      Swal.fire({\n        title: 'Please Wait !',\n        html: 'login in...',\n        allowOutsideClick: false,\n        showConfirmButton: false,\n        willOpen: () => {\n          Swal.showLoading(null);\n        }\n      });\n      this.loginservice.login(this.loginform.value).subscribe(data => {\n        sessionStorage.setItem(\"token\", data[\"token\"]);\n        console.log(data);\n        Swal.close();\n        this.route.navigate(['/employee/employee-list']);\n      }, error => {\n        Swal.close();\n        Swal.fire('Unauthorize', 'Please use correct username and password', 'warning');\n        console.error(error);\n      });\n    }\n\n  }\n\n  LoginFormComponent.ɵfac = function LoginFormComponent_Factory(t) {\n    return new (t || LoginFormComponent)(i0.ɵɵdirectiveInject(i1.LoginServiceService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  LoginFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginFormComponent,\n    selectors: [[\"app-login-form\"]],\n    decls: 11,\n    vars: 5,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"exampleInputEmail1\"], [\"type\", \"email\", \"formControlName\", \"txt_EMAIL\", \"id\", \"exampleInputEmail1\", \"aria-describedby\", \"emailHelp\", \"placeholder\", \"Enter email\", 1, \"form-control\"], [\"for\", \"exampleInputPassword1\"], [\"type\", \"password\", \"formControlName\", \"txt_PASSWORD\", \"id\", \"exampleInputPassword1\", \"placeholder\", \"Password\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n    template: function LoginFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginFormComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.getlogin();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n        i0.ɵɵtext(3, \"Email address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 6);\n        i0.ɵɵtext(10, \"Submit\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.loginform);\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassProp(\"error-field-red\", ctx.loginform.controls.txt_EMAIL.invalid && ctx.loginform.controls.txt_EMAIL.touched);\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassProp(\"error-field-red\", ctx.loginform.controls.txt_EMAIL.invalid && ctx.loginform.controls.txt_EMAIL.touched);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName]\n  });\n  return LoginFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}